import React, { useState, useEffect } from 'react';
import { View, Text, Button, StyleSheet, Image } from 'react-native';
import { launchCamera } from 'react-native-image-picker';
import XLSX from 'xlsx';
import RNFS from 'react-native-fs';
import Share from 'react-native-share';
import * as faceapi from 'face-api.js';

const App = () => {
  const [photo, setPhoto] = useState(null);
  const [faces, setFaces] = useState([]);
  const photosPath = 'C:/Users/david/OneDrive/Desktop/CSEA/csea/photos';

  useEffect(() => {
    const loadModels = async () => {
      await faceapi.nets.ssdMobilenetv1.loadFromUri('/models');
      await faceapi.nets.faceLandmark68Net.loadFromUri('/models');
      await faceapi.nets.faceRecognitionNet.loadFromUri('/models');
    };
    loadModels();
  }, []);

  const handleCapturePhoto = async () => {
    launchCamera({ mediaType: 'photo' }, async (response) => {
      if (response.assets) {
        const uri = response.assets[0].uri;
        setPhoto(uri);
        await recognizeFaces(uri);
      }
    });
  };

  const recognizeFaces = async (uri) => {
    const img = await fetchImage(uri);
    const detections = await faceapi.detectAllFaces(img).withFaceLandmarks().withFaceDescriptors();
    setFaces(detections);
  };

  const fetchImage = async (uri) => {
    const response = await fetch(uri);
    const blob = await response.blob();
    return await faceapi.bufferToImage(blob);
  };

  const createExcel = async () => {
    const files = await RNFS.readDir(photosPath);
    const data = files.map((file, index) => ({
      Name: file.name.split('.')[0],
      Status: faces.some(face => face.match(file.name)) ? 'Present' : 'Absent',
    }));

    const ws = XLSX.utils.json_to_sheet(data);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'Attendance');

    const wbout = XLSX.write(wb, { type: 'binary', bookType: 'xlsx' });
    const file = `${RNFS.DocumentDirectoryPath}/attendance.xlsx`;

    RNFS.writeFile(file, wbout, 'ascii')
      .then(() => {
        Share.open({
          url: `file://${file}`,
          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        });
      })
      .catch(err => console.error(err));
  };

  return (
    <View style={styles.container}>
      {photo && <Image source={{ uri: photo }} style={styles.photo} />}
      <Button title="Capture Photo" onPress={handleCapturePhoto} />
      <Button title="Create Excel" onPress={createExcel} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  photo: {
    width: 200,
    height: 200,
    marginBottom: 20,
  },
});

export default App;
